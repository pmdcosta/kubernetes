apiVersion: v1
kind: ReplicationController
metadata:
  name: weave-scope-app
  labels:
    provider: weave-scope-app
    heritage: helm
spec:
  replicas: 1
  template:
    metadata:
      labels:
        provider: weave-scope-app
    spec:
      containers:
      - name: weave-scope-app
        image: weaveworks/scope:0.14.0
        args:
        - --no-probe
        - --app.weave.addr=
        ports:
        - containerPort: 4040
          hostPort: 4040

---

apiVersion: v1
kind: Service
metadata:
  name: weave-scope-app
  labels:
    provider: weave-scope-app
    heritage: helm
spec:
  ports:
  - name: app
    port: 4040
  selector:
    provider: weave-scope-app

---

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: weave-scope-probe
  labels:
    heritage: helm
    k8s-app:  weave-scope-probe
spec:
  template:
    metadata:
      name:  weave-scope-probe
      labels:
        heritage: helm
        k8s-app:  weave-scope-probe
    spec:
      hostPID: true
      hostNetwork: true
      containers:
      - name:  weave-scope-probe
        image: weaveworks/scope:0.14.0
        args:
        - --no-app
        # Remove argument below if you don't use a kubernetes-specific Docker bridge (cbr0)
        - --probe.docker.bridge=cbr0
        - --probe.docker=true
        - --probe.kubernetes=true
        - --probe.weave.addr=
        # We cannot refer to the Scope App with its Kubernetes Service
        # DNS name (weave-scope-app) directly because Docker nor Kubernetes
        # allow customizing the DNS servers (the Kubernetes DNS add-on
        # server in this case) of a container when it runs in the
        # host's network namespace (see
        # https://github.com/kubernetes/kubernetes/issues/17406 and
        # https://github.com/docker/docker/issues/10384).
        # Instead, we use variable expansion on its service
        # environment variables.
        #
        # NOTE: Unfortunately this imposes a specific creation
        # ordering since the Scope App Service needs to be created first for
        # the service environment variables below to be accesible.
        - "$(WEAVE_SCOPE_APP_SERVICE_HOST):$(WEAVE_SCOPE_APP_SERVICE_PORT)"
        # If you have a scope.weave.works account and want to run
        # Scope in Cloud Service Mode, comment out the argument above and
        # uncomment the argument below, replacing "foo" with the Service
        # token which you will obtain when logging in to your
        # scope.weave.works account:
        # - --probe.token=foo
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
